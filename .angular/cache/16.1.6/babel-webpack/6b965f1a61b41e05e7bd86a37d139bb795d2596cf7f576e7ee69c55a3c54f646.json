{"ast":null,"code":"import { Task } from 'src/app/model/task';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/crud.service\";\nfunction DashboardComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"div\", 23)(2, \"div\", 24)(3, \"div\", 25);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_16_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.call(task_r1));\n    });\n    i0.ɵɵtext(6, \"e\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_16_Template_div_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const task_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTask(task_r1));\n    });\n    i0.ɵɵtext(8, \"X\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.task_name, \" \");\n  }\n}\nexport class DashboardComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.addTaskValue = '';\n    this.editTaskValue = '';\n  }\n  ngOnInit() {\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    });\n  }\n  editTask() {\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to update task\");\n    });\n  }\n  deleteTask(etask) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err => {\n      alert(\"Failed to delete task\");\n    });\n  }\n  call(etask) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 30,\n  vars: 3,\n  consts: [[1, \"container-fluid\", \"bg-light\"], [1, \"container\", \"bg-light\"], [1, \"row\", \"mt-4\", 2, \"height\", \"500px\"], [1, \"col\"], [1, \"col-md-6\", \"bg-white\", \"shadow\"], [1, \"card\", \"bg-warning\", \"mt-4\"], [1, \"text-white\", \"p-3\", \"pt-2\", \"pb-2\"], [1, \"shadow\"], [1, \"input-group\", \"p-4\"], [\"type\", \"text\", \"placeholder\", \"Enter task \", \"name\", \"task\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"text-primary\", \"mt-4\"], [2, \"overflow-y\", \"auto\", \"height\", \"350px\"], [\"class\", \"m-3\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-success\", 3, \"click\"], [1, \"m-3\"], [\"id\", \"tasks\", 1, \"p-2\", \"shadow\", \"border\"], [1, \"input-group\", \"row\", \"ps-3\"], [1, \"card\", \"col-md-10\", \"border-0\"], [\"data-bs-toggle\", \"modal\", \"type\", \"button\", \"data-bs-target\", \"#exampleModal\", 1, \"btn\", \"btn-outline-primary\", \"col\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", \"col\", 3, \"click\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3);\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\", 6);\n      i0.ɵɵtext(7, \"To Do App\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.addTaskValue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_11_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(12, \"+\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"h4\", 11);\n      i0.ɵɵtext(14, \"Tasks : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12);\n      i0.ɵɵtemplate(16, DashboardComponent_div_16_Template, 9, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 14)(18, \"div\", 15)(19, \"div\", 16)(20, \"div\", 17)(21, \"h5\", 18);\n      i0.ɵɵtext(22, \"Edit Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"button\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 20)(25, \"div\", 8)(26, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.editTaskValue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_27_listener() {\n        return ctx.editTask();\n      });\n      i0.ɵɵtext(28, \"Update\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelement(29, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.addTaskValue);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.taskArr);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.editTaskValue);\n    }\n  },\n  styles: [\"#tasks[_ngcontent-%COMP%]:hover {\\n    transform: scale(1.01);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtBQUMxQiIsInNvdXJjZXNDb250ZW50IjpbIiN0YXNrczpob3ZlciB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Task","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_div_16_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r3","task_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","call","DashboardComponent_div_16_Template_div_click_7_listener","ctx_r4","deleteTask","ɵɵadvance","ɵɵtextInterpolate1","task_name","DashboardComponent","constructor","crudService","taskObj","taskArr","addTaskValue","editTaskValue","ngOnInit","getAllTask","subscribe","res","err","alert","addTask","editTask","etask","ɵɵdirectiveInject","i1","CrudService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","DashboardComponent_Template_input_ngModelChange_10_listener","$event","DashboardComponent_Template_button_click_11_listener","ɵɵtemplate","DashboardComponent_div_16_Template","DashboardComponent_Template_input_ngModelChange_26_listener","DashboardComponent_Template_button_click_27_listener","ɵɵproperty"],"sources":["C:\\Users\\tejas\\Downloads\\Task-Management-App-main\\Task-Management-App-main\\src\\app\\component\\dashboard\\dashboard.component.ts","C:\\Users\\tejas\\Downloads\\Task-Management-App-main\\Task-Management-App-main\\src\\app\\component\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/model/task';\nimport { CrudService } from 'src/app/service/crud.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  taskObj : Task = new Task();\n  taskArr : Task[] = [];\n\n  addTaskValue : string = '';\n  editTaskValue : string = '';\n\n  constructor(private crudService : CrudService) { }\n\n  ngOnInit(): void {\n    this.editTaskValue = '';\n    this.addTaskValue = '';\n    this.taskObj = new Task();\n    this.taskArr = [];\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.crudService.getAllTask().subscribe(res => {\n      this.taskArr = res;\n    }, err => {\n      alert(\"Unable to get list of tasks\");\n    });\n  }\n\n  addTask() {\n    this.taskObj.task_name = this.addTaskValue;\n    this.crudService.addTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n      this.addTaskValue = '';\n    }, err => {\n      alert(err);\n    })\n  }\n\n  editTask() {\n    this.taskObj.task_name = this.editTaskValue;\n    this.crudService.editTask(this.taskObj).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to update task\");\n    })\n  }\n\n  deleteTask(etask : Task) {\n    this.crudService.deleteTask(etask).subscribe(res => {\n      this.ngOnInit();\n    }, err=> {\n      alert(\"Failed to delete task\");\n    });\n  }\n\n  call(etask : Task) {\n    this.taskObj = etask;\n    this.editTaskValue = etask.task_name;\n  }\n\n\n}\n","<div class=\"container-fluid bg-light\">\n    <div class=\"container bg-light\">\n\n        <div class=\"row mt-4\" style=\"height: 500px;\">\n            <div class=\"col\"></div>\n            <div class=\"col-md-6 bg-white shadow\">\n\n                <div class=\"card bg-warning mt-4\">\n                    <h4 class=\"text-white p-3 pt-2 pb-2\">To Do App</h4>\n                </div>\n\n                <div class=\"shadow\">\n                    <div class=\"input-group p-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Enter task \" name=\"task\" [(ngModel)]=\"addTaskValue\">\n                        <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"addTask()\">+</button>\n                      </div>\n                </div>\n\n                <h4 class=\"text-primary mt-4\">Tasks : </h4>\n\n                <div style=\"overflow-y: auto; height: 350px;\">\n                    <div class=\"m-3\" *ngFor=\"let task of taskArr\">\n                        <div class=\"p-2 shadow border\" id=\"tasks\" >\n                            <div class=\"input-group row ps-3\" >\n                                <div class=\"card col-md-10 border-0\"> {{task.task_name}} </div>\n                                <button class=\"btn btn-outline-primary col me-2\" data-bs-toggle=\"modal\" type=\"button\" data-bs-target=\"#exampleModal\" (click)=\"call(task)\" >e</button>\n                                <div class=\"btn btn-outline-danger col\" (click)=\"deleteTask(task)\" >X</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Edit Task</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"input-group p-4\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Enter task \" name=\"task\" [(ngModel)]=\"editTaskValue\">\n                                <button class=\"btn btn-outline-success\" type=\"button\" data-bs-dismiss=\"modal\" (click)=\"editTask()\">Update</button>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"col\"></div>\n\n        </div>\n\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}